using CleanArchitecture.Domain.Abstractions;  // Para usar Result<TResponse>
using MediatR;                                // Para usar IRequestHandler<TRequest, TResponse>

namespace CleanArchitecture.Application.Abstractions.Messaging;

/// <summary>
/// Contrato para los handlers de consultas en el patr칩n CQRS.
/// Define la firma que debe tener cualquier handler que procese un <see cref="IQuery{TResponse}"/>
/// y devuelva un <see cref="Result{TResponse}"/>.
/// </summary>
/// <typeparam name="TQuery">
/// Tipo de la consulta a manejar. Debe implementar <see cref="IQuery{TResponse}"/>.
/// </typeparam>
/// <typeparam name="TResponse">
/// Tipo de dato que devolver치 la consulta (por ejemplo: DTO, lista, entidad).
/// </typeparam>
public interface IQueryHandler<TQuery, TResponse>
    : IRequestHandler<TQuery, Result<TResponse>> // Indica a MediatR que maneja TQuery y devuelve Result<TResponse>
    where TQuery : IQuery<TResponse>             // Restringe para que TQuery sea una IQuery<TResponse>
{
    // 游닇 Esta interfaz no agrega nuevos m칠todos, simplemente
    // le da un nombre m치s expl칤cito al hecho de que se trata
    // de un Handler para una Query, y estandariza la convenci칩n.
    //
    // MediatR sabr치 encontrar e invocar la implementaci칩n correcta
    // de este handler cuando se env칤e un objeto que implemente IQuery<TResponse>.
}
