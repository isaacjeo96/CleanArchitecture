using CleanArchitecture.Application.Abstractions.Messaging;

namespace CleanArchitecture.Application.Alquileres.ReservarAlquiler;

/// <summary>
/// Comando que representa la solicitud de reservar un alquiler de vehÃ­culo.
/// Contiene toda la informaciÃ³n necesaria para que el sistema procese la reserva:
/// - El vehÃ­culo que se quiere alquilar.
/// - El usuario que realiza la reserva.
/// - El periodo de tiempo solicitado (fecha de inicio y fecha de fin).
/// </summary>
/// <remarks>
/// Este comando sigue el patrÃ³n CQRS y se envÃ­a a travÃ©s de MediatR, 
/// donde serÃ¡ manejado por un <see cref="ReservarAlquilerCommandHandler"/> 
/// para aplicar las reglas de negocio.
/// </remarks>
/// <param name="VehiculoId">Identificador Ãºnico del vehÃ­culo a reservar.</param>
/// <param name="UserId">Identificador Ãºnico del usuario que realiza la reserva.</param>
/// <param name="FechaInicio">Fecha en la que se desea iniciar el alquiler.</param>
/// <param name="FechaFin">Fecha en la que finaliza el alquiler.</param>
public record ReservarAlquilerCommand(
    Guid VehiculoId, // ğŸ“Œ ID Ãºnico del vehÃ­culo a alquilar.
    Guid UserId,     // ğŸ“Œ ID Ãºnico del usuario que estÃ¡ realizando la reserva.
    DateOnly FechaInicio, // ğŸ“… DÃ­a en que comienza el alquiler.
    DateOnly FechaFin     // ğŸ“… DÃ­a en que termina el alquiler.
) : ICommand<Guid>; // ğŸ”„ Implementa ICommand indicando que devolverÃ¡ un Guid (ID del alquiler creado).
